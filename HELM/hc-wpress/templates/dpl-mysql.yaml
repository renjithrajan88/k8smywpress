apiVersion:  apps/v1
kind: Deployment
metadata:
  name: {{ printf "dpl-%s" .Values.mysqlDeployment.name }}
  namespace: {{ printf "ns-%s" .Values.global.name }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "1"
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.mysqlDeployment.strategyType }}
  template:
    metadata:
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - image: "{{ .Values.mysqlDeployment.image }}"
        name: {{ .Values.mysqlDeployment.name }}
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ printf "cmap-%s" .Values.global.name }}          
              key: mysql-db-name
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ printf "sec-%s" .Values.global.name }}
              key: mysql-root-password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ printf "sec-%s" .Values.global.name }}
              key: mysql-username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ printf "sec-%s" .Values.global.name }}
              key: mysql-password
        ports:
        - containerPort: {{ .Values.mysqlDeployment.containerPort }}
          name: {{ .Values.mysqlDeployment.name }}
        volumeMounts:
        - name: {{ printf "vol-%s" .Values.mysqlDeployment.name }}
          mountPath: "/var/lib/mysql"
      volumes:
      - name: {{ printf "vol-%s" .Values.mysqlDeployment.name }}
        persistentVolumeClaim:
          claimName: {{ printf "pvc-%s" .Values.mysqlDeployment.name }}		  